--CREATE SIGNUP TABLE 
CREATE TABLE SignUp(
	userid INT PRIMARY KEY IDENTITY(1,1),
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,	
	address VARCHAR(150),
	);

-- INSERT VALUES INTO SIGNUP TABLE
INSERT INTO SignUp(first_name,last_name,address) VALUES
	('RAJ','KUMAR','KRISHNAGIRI'),
	('SIVA','ANBU','SIVAGANGAI'),
	('JAGAN','NATHAN','DHARMAPURI'),
	('KRISHNA','KUMAR','THENI');

CREATE TABLE LoginUp(
	userid INT NOT NULL,
	username VARCHAR(50) NOT NULL UNIQUE,
	user_pwd VARCHAR(50) NOT NULL,
	FOREIGN KEY (userid) REFERENCES SignUP(userid)
	);
--RENAME COLUMN NAME
EXEC sp_RENAME 'LoginUp.Uuser_pwd', 'user_pwd', 'COLUMN';
--SHOW TABLE STRUCTURE
EXEC sp_help 'dbo.LoginUp';  


INSERT INTO LoginUp(userid,username,user_pwd) VALUES
	(1,'RAJ','KRISHNAGIRI123'),
	(2,'SIVA','SIVAGANGAI123'),
	(3,'JAGAN','DHARMAPURI123'),
	(4,'KRISHNA','THENI123');

SELECT L.userid,S.first_name,S.last_name,L.username,L.user_pwd,S.address FROM SignUp S,LoginUp L WHERE S.userid=L.userid;

--top
SELECT TOP 2 * from LoginUp;





--CREATE PROCEDURE [ SHORT NAME  FOR BIG SQL COMMAND ]  

CREATE PROCEDURE showusers 
AS
BEGIN
SELECT L.userid,S.first_name,S.last_name,L.username,L.user_pwd,S.address FROM SignUp S,LoginUp L WHERE S.userid=L.userid ;
END

--EXCUTE PROCEDURE_NAME
EXEC showusers;

--UPDATE 
UPDATE LoginUp SET username='RAJU' WHERE userid=1;

--DELET 
DELETE FROM LoginUp WHERE USERID=4;

--CREATE EMPLOYEE TABLE
CREATE TABLE EMPLOYEE(
	SNO INT IDENTITY(1,1),
	EMPID INT NOT NULL PRIMARY KEY,
	E_NAME VARCHAR(50) NOT NULL,
	E_SAL INT NOT NULL,	
	E_ADDRESS VARCHAR(150),
);

--INSERT DETAILS INTO EMPLOYEE TABLE
INSERT INTO EMPLOYEE(EMPID,E_NAME,E_SAL,E_ADDRESS) VALUES
	(101,'RAJ',200000,'KRISHNAGIRI'),
	(102,'RAMESH',100000,'KARNATAKA'),
	(103,'MALAR',200000,'KARNATAKA'),
	(104,'SHIVAPRIYA',250000,'KRISHNAGIRI'),
	(105,'DEVASRI',500000,'KRISHNAGIRI');

--FIND SECOND HIGHEST SALARY
SELECT MAX(E_SAL) [SECOND HGH SALARY] 
FROM EMPLOYEE 
WHERE E_SAL<(SELECT MAX(E_SAL) FROM EMPLOYEE);

--FIND NUMBER OF EMPLOYEES BASED ON PLACE
SELECT E_ADDRESS [EMPLOYEE ADDRESS],COUNT(*) [TOTAL EMPLOYEE] FROM EMPLOYEE GROUP BY E_ADDRESS

SELECT MIN(E_SAL) [MIN SAL],E_ADDRESS [PLACE] FROM EMPLOYEE GROUP BY E_ADDRESS;
--HAVING CLAUSE
SELECT MIN(E_SAL) [MIN SAL],E_ADDRESS [PLACE] FROM EMPLOYEE GROUP BY E_ADDRESS HAVING E_ADDRESS='KRISHNAGIRI';


--LEFT JOIN FOR SIGNUP AND LOGINUP TABLES
SELECT * FROM SignUp S LEFT JOIN LOGINUP L ON S.SNO=L.USERID;
--RIGHT JOIN FOR SIGNUP AND LOGINUP TABLES
SELECT * FROM SignUp S RIGHT JOIN LOGINUP L ON S.SNO=L.USERID;

--REMOVE USERID COLUMN FROM SIGNUP TABLE
ALTER TABLE SignUp DROP COLUMN USERID;
--SHOW TABLE STRUCTURE
EXEC sp_help 'dbo.SignUp';  

--Like function
SELECT * FROM SignUp WHERE first_name Like '_a%';

--CREATE PROCEDURE FOR INSERT VALUES INTO EMPLOYEE TABLE
CREATE PROCEDURE CREATEUSER
(
 @EMPID INT,
 @E_NAME VARCHAR(50),
 @E_SAL INT,
 @E_ADDRESS VARCHAR(150)
)
AS
BEGIN
	
	SET NOCOUNT ON;
	INSERT INTO EMPLOYEE(EMPID,E_NAME,E_SAL,E_ADDRESS) VALUES(@EMPID,@E_NAME,@E_SAL,@E_ADDRESS)
END;

EXEC CREATEUSER @EMPID=1006,@E_NAME='SURESH',@E_SAL=500000,@E_ADDRESS='DHARMAPURI';

--CREATE PROCEDURE FOR UPDATE EMPID USING EMP NAME
CREATE PROCEDURE UPDATEUSER 
(
	 @empidINT,
	 @E_NAME VARCHAR(50)
)
AS
BEGIN
	UPDATE EMPLOYEE SET EMPID=@EMPID WHERE E_NAME=@E_NAME
END;

EXEC UPDATEUSER @EMPID=106,@E_NAME='SURESH';

--CREATE VIEW
CREATE VIEW EMPDETAILS AS SELECT E_NAME,E_SAL FROM EMPLOYEE;
--USE VIEW
SELECT * FROM EMPDETAILS;